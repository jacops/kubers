---
# Source: kubers/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubers
  namespace: kubers
  labels:
    app.kubernetes.io/name: kubers
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kubers
    helm.sh/chart: kubers-1.1.2
---
# Source: kubers/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubers
  namespace: kubers
  labels:
    app.kubernetes.io/name: kubers
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kubers
    helm.sh/chart: kubers-1.1.2
rules:
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations"]
    verbs:
      - "get"
      - "list"
      - "watch"
      - "patch"
---
# Source: kubers/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubers
  labels:
    app.kubernetes.io/name: kubers
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kubers
    helm.sh/chart: kubers-1.1.2
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubers
subjects:
  - kind: ServiceAccount
    name: kubers
    namespace: "kubers"
---
# Source: kubers/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: webhook
  namespace: kubers
  labels:
    app.kubernetes.io/name: kubers
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kubers
    helm.sh/chart: kubers-1.1.2
spec:
  ports:
    - port: 443
      targetPort: 8080
  selector:
    app.kubernetes.io/name: kubers
---
# Source: kubers/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubers
  namespace: kubers
  labels:
    app.kubernetes.io/name: kubers
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kubers
    helm.sh/chart: kubers-1.1.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubers
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubers
    spec:
      serviceAccountName: kubers
      containers:
        - name: kubers
          image: "docker.io/jacops/kubersd:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBERSD_LISTEN
              value: ":8080"
            - name: KUBERSD_LOG_LEVEL
              value: "info"
            - name: KUBERSD_AGENT_IMAGE
              value: "docker.io/jacops/kubers-agent:latest"
            - name: KUBERSD_LOG_FORMAT
              value: "standard"
            - name: KUBERSD_TLS_AUTO
              value: kubers-cfg
            - name: KUBERSD_TLS_AUTO_HOSTS
              value: "webhook,webhook.$(NAMESPACE),webhook.$(NAMESPACE).svc"
            - name: KUBERS_AGENT_LOG_FORMAT
              value: standard
            - name: KUBERS_AGENT_LOG_LEVEL
              value: info
          args:
            - webhook
            - 2>&1
---
# Source: kubers/templates/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: kubers-cfg
  namespace: kubers
  labels:
    app.kubernetes.io/name: kubers
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: kubers
    helm.sh/chart: kubers-1.1.2
webhooks:
  - name: kubers.jacops.pl
    clientConfig:
      service:
        name: webhook
        path: "/mutate"
        namespace: kubers
      caBundle: ""
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["deployments", "jobs", "pods", "statefulsets"]
